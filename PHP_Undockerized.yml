---
# persistent / runtime deps
- name: Set ENV vars- PHPIZE_DEPS
  shell: export PHPIZE_DEPS="autoconf dpkg-dev file g++ gcc libc-dev libpcre3-dev make pkg-config re2c"

- name: Shell Command (apt-get update)
  shell: apt-get update && apt-get install -y $PHPIZE_DEPS ca-certificates curl libedit2 libsqlite3-0 libxml2 xz-utils --no-install-recommends && rm -r /var/lib/apt/lists/*

- name: Set ENV vars- PHP_INI_DIR
  shell: export PHP_INI_DIR="/usr/local/etc/php"

- name: Shell Command (mkdir -p)
  shell: mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
- name: Set ENV vars- PHP_EXTRA_CONFIGURE_ARGS
  shell: export PHP_EXTRA_CONFIGURE_ARGS="--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data"

# https://github.com/docker-library/php/issues/272
# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)
# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)
# Enable optimization (-O2)
# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)
# Apply stack smash protection to functions using local buffers and alloca()
- name: Set ENV vars- PHP_CFLAGS -fpic -fpie -O2"
  shell: export PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"

- name: Set ENV vars- PHP_CPPFLAGS
  shell: export PHP_CPPFLAGS="$PHP_CFLAGS"

- name: Set ENV vars- PHP_LDFLAGS -Wl,--hash-style -pie"
  shell: export PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"

- name: Set ENV vars- GPG_KEYS
  shell: export GPG_KEYS="0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3"

- name: Set ENV vars- PHP_VERSION
  shell: export PHP_VERSION="5.6.30"

- name: Set ENV vars- PHP_URL PHP_ASC_URL
  shell: export PHP_URL="https://secure.php.net/get/php-5.6.30.tar.xz/from/this/mirror" PHP_ASC_URL="https://secure.php.net/get/php-5.6.30.tar.xz.asc/from/this/mirror"

- name: Set ENV vars- PHP_SHA256 PHP_MD5
  shell: export PHP_SHA256="a363185c786432f75e3c7ff956b49c3369c3f6906a6b10459f8d1ddc22f70805" PHP_MD5="68753955a8964ae49064c6424f81eb3e"

- name: Shell Command (set -xe;)
  shell: set -xe; fetchDeps=' wget '; apt-get update; apt-get install -y --no-install-recommends $fetchDeps; rm -rf /var/lib/apt/lists/*; mkdir -p /usr/src; cd /usr/src; wget -O php.tar.xz "$PHP_URL"; if [ -n "$PHP_SHA256" ]; then echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; fi; if [ -n "$PHP_MD5" ]; then echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; fi; if [ -n "$PHP_ASC_URL" ]; then wget -O php.tar.xz.asc "$PHP_ASC_URL"; export GNUPGHOME="$(mktemp -d)"; for key in $GPG_KEYS; do gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; done; gpg --batch --verify php.tar.xz.asc php.tar.xz; rm -r "$GNUPGHOME"; fi; apt-get purge -y --auto-remove $fetchDeps

- name: Copy docker-php-source to /usr/local/bin/
  shell: cp docker-php-source /usr/local/bin/

- name: Shell Command (set -xe)
  shell: set -xe && buildDeps=" $PHP_EXTRA_BUILD_DEPS libcurl4-openssl-dev libedit-dev libsqlite3-dev libssl-dev libxml2-dev " && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* && export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS" && docker-php-source extract && cd /usr/src/php && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && ./configure --build="$gnuArch" --with-config-file-path="$PHP_INI_DIR" --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" --disable-cgi --enable-ftp --enable-mbstring --enable-mysqlnd --with-curl --with-libedit --with-openssl --with-zlib --with-pcre-regex=/usr --with-libdir="lib/$gnuArch" $PHP_EXTRA_CONFIGURE_ARGS && make -j "$(nproc)" && make install && { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } && make clean && docker-php-source delete && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps

- name: Copy docker-php-entrypoint to /usr/local/bin/
  shell: cp docker-php-ext-* docker-php-entrypoint /usr/local/bin/

- name: Shell Command (set -ex)
  shell: cd /var/www/html && set -ex && cd /usr/local/etc && if [ -d php-fpm.d ]; then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; cp php-fpm.d/www.conf.default php-fpm.d/www.conf; else mkdir php-fpm.d; cp php-fpm.conf.default php-fpm.d/www.conf; { echo '[global]'; echo 'include=etc/php-fpm.d/*.conf'; } | tee php-fpm.conf; fi && { echo '[global]'; echo 'error_log = /proc/self/fd/2'; echo; echo '[www]'; echo '; if we send this to /proc/self/fd/1, it never appears'; echo 'access.log = /proc/self/fd/2'; echo; echo 'clear_env = no'; echo; echo '; Ensure worker stdout and stderr are sent to the main error log.'; echo 'catch_workers_output = yes'; } | tee php-fpm.d/docker.conf && { echo '[global]'; echo 'daemonize = no'; echo; echo '[www]'; echo 'listen = [::]:9000'; } | tee php-fpm.d/zz-docker.conf
